---
title: "UK_HouseOfCommons"
author: "Haoting Chan"
format: html
editor: visual
---

# Setup

```{r Setup}
# Codes to install the need packaged and it'll output the package(s) that may have failed to load
knitr::opts_chunk$set(echo = TRUE)
p_needed <-
  c("tidyverse",
    "tidytext",
    "DataExplorer", "skimr",  "VIM",   # for EDA
    "modelsummary",                    # Descriptive statistics & Models Summary
    "haven", "foreign", "here"         # for STATA data type
    )

packages <- rownames(installed.packages())
p_to_install <- p_needed[!(p_needed %in% packages)]

if (length(p_to_install) > 0) {
  install.packages(p_to_install)
}
sapply(p_needed, require, character.only = TRUE)
```

# Load Raw Data

```{r}
# Load the Corp_HouseOfCommons_V2.rds

#setwd("C:/Users/Bryan Chan/Documents/Projects/MA_Thesis/") 

df_HoC_raw <- readRDS(here("data/Corp_HouseOfCommons_V2.rds"))
df_HoC_raw %>% head(10)
```

# Preprocess

```{r}
# Process and clean the dataset df_HoC
df_HoC <- df_HoC_raw %>% 
  select(-c(parliament,iso3country)) %>% 
  mutate(date = as.Date(date, format = "%Y-%m-%d"),
         agenda = as.factor(agenda),
         speaker = as.factor(speaker),
         party = as.factor(party),
         chair = as.factor(chair),
         terms = as.factor(terms)) 

df_HoC_2000s <- df_HoC %>% 
  filter(date >= "2000-01-01" & date <= "2020-12-31")
```


```{r}
# Save df_HoC as Rdata. in the data folder
setwd("C:/Users/Bryan Chan/Documents/Projects/MA_Thesis/") 

#saveRDS(df_HoC, "data/df_HoC.rds")
saveRDS(df_HoC_2000s, "data/df_HoC_2000s.rds")
```

# Create Party DF

```{r}
# Create separate Dataframe for each party
df_Lab <- df_HoC_2000s %>% filter(party == "Lab")
df_Con <- df_HoC_2000s %>% filter(party == "Con")
df_LibDem <- df_HoC_2000s %>% filter(party == "LibDem")
df_SNP <- df_HoC_2000s %>% filter(party == "SNP")
df_PlaidCymru <- df_HoC_2000s %>% filter(party == "PlaidCymru")
df_UKIP <- df_HoC_2000s %>% filter(party == "UKIP")
df_GPEW <- df_HoC_2000s %>% filter(party == "GPEW")
df_Independent <- df_HoC_2000s %>% filter(party == "Independent")
df_DUP <- df_HoC_2000s %>% filter(party == "DUP")
df_UUP <- df_HoC_2000s %>% filter(party == "UUP")
df_SDLP <- df_HoC_2000s %>% filter(party == "SDLP")
df_APNI <- df_HoC_2000s %>% filter(party == "APNI")
df_Respect <- df_HoC_2000s %>% filter(party == "Respect")
df_UKUP <- df_HoC_2000s %>% filter(party == "UKUP")
df_ChangeUK <- df_HoC_2000s %>% filter(party == "Change UK")
df_TheIndependents <- df_HoC_2000s %>% filter(party == "The Independents")
df_BirkenheadSocialJustice <- df_HoC_2000s %>% filter(party == "Birkenhead Social Justice")
df_other <- df_HoC_2000s %>% filter(party == "other")

# Save the dataframes into csv.
setwd("C:/Users/Bryan Chan/Documents/Projects/MA_Thesis/data/")
write.csv(df_Lab, "df_Lab.csv", row.names = FALSE)
write.csv(df_Con, "df_Con.csv", row.names = FALSE)
write.csv(df_LibDem, "df_LibDem.csv", row.names = FALSE)

#write.csv(df_SNP, "df_SNP.csv", row.names = FALSE)
#write.csv(df_PlaidCymru, "df_PlaidCymru.csv", row.names = FALSE)
#write.csv(df_UKIP, "df_UKIP.csv", row.names = FALSE)
#write.csv(df_GPEW, "df_GPEW.csv", row.names = FALSE)
#write.csv(df_Independent, "df_Independent.csv", row.names = FALSE)
#write.csv(df_DUP, "df_DUP.csv", row.names = FALSE)
#write.csv(df_UUP, "df_UUP.csv", row.names = FALSE)
#write.csv(df_SDLP, "df_SDLP.csv", row.names = FALSE)
#write.csv(df_APNI, "df_APNI.csv", row.names = FALSE)
#write.csv(df_Respect, "df_Respect.csv", row.names = FALSE)
#write.csv(df_UKUP, "df_UKUP.csv", row.names = FALSE)
#write.csv(df_ChangeUK, "df_ChangeUK.csv", row.names = FALSE)
#write.csv(df_TheIndependents, "df_TheIndependents.csv", row.names = FALSE)
#write.csv(df_BirkenheadSocialJustice, "df_BirkenheadSocialJustice.csv", row.names = FALSE)
#write.csv(df_other, "df_other.csv", row.names = FALSE)

```

# EDA

```{r}
# Get Overiew
dataset_overview <- plot_intro(df_HoC_raw)
```

```{r}
DGplot_categorical <- df_HoC_2000s %>% 
  plot_bar(title = "Distribution of Categorical variables", ncol = 2)

DGplot_continuous <- df_HoC_2000s %>% 
  plot_histogram(title = "Distribution of Continuous variables", ncol = 2)
```

```{r}
setwd("C:/Users/Bryan Chan/Documents/Projects/MA_Thesis/outputs/") 

# Speech Over Time
plot_speech_overTime <- df_HoC_2000s %>%
  ggplot(aes(x = date)) +
  geom_line(stat = "count") +
  labs(x = "Date", y = "Count", title = "Distribution of Dates")
ggsave("plot_speech_overTime.png", plot_speech_overTime)

# Speeches by Party
plot_speech_byParty <- df_HoC_2000s %>%
  group_by(party) %>%
  summarise(n = n()) %>%
  filter(n > 1000) %>%       # only speeches above 1000
  ggplot(aes(x = party, y = n)) +
  geom_bar(stat = "identity") +
  labs(x = "Party", y = "Count", title = "Number of Speeches by Party") 
ggsave("plot_speech_byParty.png", plot_speech_byParty)

# Speech Length
plot_speech_length <- df_HoC_2000s %>%
  mutate(speech_length = str_count(text, "\\S+")) %>%
  ggplot(aes(x = party, y = speech_length)) +
  geom_boxplot() +
  labs(x = "Party", y = "Speech Length", title = "Speech Length by Party")
ggsave("plot_speech_length.png", plot_speech_length)

# Speech Term Frequency
plot_Term_Frequency <- df_HoC_2000s %>%
  unnest_tokens(word, text) %>%
  count(word, sort = TRUE) %>%
  filter(!word %in% stop_words$word) %>%
  head(10) %>%
  ggplot(aes(reorder(word, n), n)) +
  geom_col() +
  coord_flip() +
  labs(x = "Word", y = "Count", title = "Most Common Words in Speeches")
ggsave("plot_Term_Frequency.png", plot_Term_Frequency)

# Top 10 most frequent speakers
plot_Top10_speakers <- df_HoC_2000s %>%
  group_by(speaker) %>%
  summarise(n = n()) %>%
  arrange(desc(n)) %>%
  head(10) %>%
  ggplot(aes(reorder(speaker, n), n)) +
  geom_col() +
  coord_flip() +
  labs(x = "Speaker", y = "Count", title = "Top 10 Most Frequent Speakers")
ggsave("plot_Top10_speakers.png", plot_Top10_speakers)
```
