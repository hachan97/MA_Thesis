{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0309777a",
   "metadata": {
    "id": "hIkR4TmZN3Yt",
    "papermill": {
     "duration": 0.00807,
     "end_time": "2025-02-19T17:25:34.556920",
     "exception": false,
     "start_time": "2025-02-19T17:25:34.548850",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Setup Packages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f45a8657",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:25:34.572409Z",
     "iopub.status.busy": "2025-02-19T17:25:34.572146Z",
     "iopub.status.idle": "2025-02-19T17:26:01.572429Z",
     "shell.execute_reply": "2025-02-19T17:26:01.571533Z"
    },
    "id": "R46fDGCFN_ly",
    "papermill": {
     "duration": 27.009782,
     "end_time": "2025-02-19T17:26:01.574196",
     "exception": false,
     "start_time": "2025-02-19T17:25:34.564414",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Import libraries\n",
    "\n",
    "# Standard Python libraries\n",
    "import pandas as pd\n",
    "#import pyreadr\n",
    "from datasets import load_dataset, load_from_disk, Dataset  # For loading datasets\n",
    "import datetime\n",
    "import os\n",
    "os.environ[\"CUDA_LAUNCH_BLOCKING\"] = \"1\"\n",
    "os.environ['PYTORCH_CUDA_ALLOC_CONF'] = \"expandable_segments:True\"\n",
    "import json\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Hugging Face Transformers\n",
    "import transformers\n",
    "from transformers import (\n",
    "    AutoTokenizer,            # For tokenizing text\n",
    "    AutoModelForCausalLM,     # For loading the GPT-2 model\n",
    "    Trainer,                  # For training the model\n",
    "    TrainingArguments,        # For specifying training arguments\n",
    "    logging,                  # For logging\n",
    "    BitsAndBytesConfig,\n",
    "    HfArgumentParser,\n",
    "    pipeline,\n",
    "    DataCollatorWithPadding )\n",
    "\n",
    "# PyTorch\n",
    "import torch  # For tensor operations and GPU support\n",
    "\n",
    "# For PEFT\n",
    "from peft import prepare_model_for_kbit_training, LoraConfig, PeftModel, get_peft_model  # For LoRA configuration and model\n",
    "from trl import SFTTrainer  # For supervised fine-tuning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d81ccb57",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:26:01.590987Z",
     "iopub.status.busy": "2025-02-19T17:26:01.590755Z",
     "iopub.status.idle": "2025-02-19T17:26:01.667204Z",
     "shell.execute_reply": "2025-02-19T17:26:01.666461Z"
    },
    "id": "pFIpZiSFo3hG",
    "outputId": "a0ddc125-bdd8-4047-e2cd-10be6f90a7e2",
    "papermill": {
     "duration": 0.08541,
     "end_time": "2025-02-19T17:26:01.668537",
     "exception": false,
     "start_time": "2025-02-19T17:26:01.583127",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Using device: cuda\n"
     ]
    }
   ],
   "source": [
    "# Check if GPU is available\n",
    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "print(f\"Using device: {device}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "580fd240",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:26:01.684053Z",
     "iopub.status.busy": "2025-02-19T17:26:01.683811Z",
     "iopub.status.idle": "2025-02-19T17:26:02.220256Z",
     "shell.execute_reply": "2025-02-19T17:26:02.219390Z"
    },
    "id": "rdFLz2PjYADL",
    "papermill": {
     "duration": 0.545832,
     "end_time": "2025-02-19T17:26:02.221929",
     "exception": false,
     "start_time": "2025-02-19T17:26:01.676097",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Set API Keys\n",
    "from kaggle_secrets import UserSecretsClient # API Loggins\n",
    "user_secrets = UserSecretsClient()\n",
    "\n",
    "## Hugging Face\n",
    "Hugging_Face_token = user_secrets.get_secret(\"Hugging_Face_token\")\n",
    "\n",
    "# Login to Hugging Face\n",
    "from huggingface_hub import login\n",
    "\n",
    "login(Hugging_Face_token)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc4f3f83",
   "metadata": {
    "papermill": {
     "duration": 0.007142,
     "end_time": "2025-02-19T17:26:02.236689",
     "exception": false,
     "start_time": "2025-02-19T17:26:02.229547",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Load Tokenizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "43e00e0c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:26:02.251916Z",
     "iopub.status.busy": "2025-02-19T17:26:02.251691Z",
     "iopub.status.idle": "2025-02-19T17:26:05.617223Z",
     "shell.execute_reply": "2025-02-19T17:26:05.616381Z"
    },
    "papermill": {
     "duration": 3.374833,
     "end_time": "2025-02-19T17:26:05.618658",
     "exception": false,
     "start_time": "2025-02-19T17:26:02.243825",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5f7f9346ff9141f19f0694b36a94ce6c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer_config.json:   0%|          | 0.00/54.5k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "43a2577e6b8047e28e7514116d2c060a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer.json:   0%|          | 0.00/9.09M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b13448f97c7f4fde913c33ca5330ee33",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "special_tokens_map.json:   0%|          | 0.00/296 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "131072"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "BASE_MODEL_ID = \"meta-llama/Llama-3.2-1B-Instruct\"\n",
    "\n",
    "# Create the tokenizer to measure the length of the text\n",
    "tokenizer = AutoTokenizer.from_pretrained(BASE_MODEL_ID, \n",
    "                                          add_bos_token=False, \n",
    "                                          trust_remote_code=True, \n",
    "                                          use_fast=True, \n",
    "                                          force_download=False)\n",
    "\n",
    "#tokenizer.add_special_tokens({'pad_token': '[PAD]'})\n",
    "tokenizer.pad_token = tokenizer.eos_token\n",
    "tokenizer.model_max_length"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b5e9eebc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:26:05.635589Z",
     "iopub.status.busy": "2025-02-19T17:26:05.635286Z",
     "iopub.status.idle": "2025-02-19T17:26:05.639769Z",
     "shell.execute_reply": "2025-02-19T17:26:05.639156Z"
    },
    "papermill": {
     "duration": 0.013955,
     "end_time": "2025-02-19T17:26:05.640879",
     "exception": false,
     "start_time": "2025-02-19T17:26:05.626924",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'bos_token': '<|begin_of_text|>',\n",
       " 'eos_token': '<|eot_id|>',\n",
       " 'pad_token': '<|eot_id|>'}"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tokenizer.special_tokens_map"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f8c2bcb",
   "metadata": {
    "id": "icaFCRI0UOLy",
    "papermill": {
     "duration": 0.007389,
     "end_time": "2025-02-19T17:26:05.656122",
     "exception": false,
     "start_time": "2025-02-19T17:26:05.648733",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Load Preprocessed Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5a8599c2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:26:05.671883Z",
     "iopub.status.busy": "2025-02-19T17:26:05.671680Z",
     "iopub.status.idle": "2025-02-19T17:26:06.025047Z",
     "shell.execute_reply": "2025-02-19T17:26:06.024097Z"
    },
    "papermill": {
     "duration": 0.363117,
     "end_time": "2025-02-19T17:26:06.026807",
     "exception": false,
     "start_time": "2025-02-19T17:26:05.663690",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "today_date = datetime.datetime.now().strftime(\"%d %b %Y\")\n",
    "\n",
    "# Load the preprocessed JSONL dataset\n",
    "with open(\"/kaggle/input/preprocess-data/preprocessed_DavidCameron.jsonl\", \"r\") as f:\n",
    "    raw_data = [json.loads(line) for line in f]\n",
    "\n",
    "# Convert into a dataset format that follows the guide\n",
    "formatted_data = []\n",
    "\n",
    "for convo in raw_data:\n",
    "    messages = []  # convo is already a list\n",
    "\n",
    "    for turn in convo:  # ✅ Iterate directly over convo\n",
    "        if turn[\"role\"] == \"system\":\n",
    "            messages.append({\"role\": \"system\", \"content\": turn[\"content\"]})\n",
    "        elif turn[\"role\"] == \"user\":\n",
    "            messages.append({\"role\": \"user\", \"content\": turn[\"content\"]})\n",
    "        elif turn[\"role\"] == \"assistant\":\n",
    "            messages.append({\"role\": \"assistant\", \"content\": turn[\"content\"]})\n",
    "\n",
    "    # Apply chat template\n",
    "    prompt = tokenizer.apply_chat_template(messages, tokenize=False, add_generation_prompt=True)\n",
    "    prompt = prompt.replace(f\"Cutting Knowledge Date: December 2023\\nToday Date: {today_date}\\n\\n\", \"\")\n",
    "\n",
    "    formatted_data.append({\"prompt\": prompt})\n",
    "\n",
    "# Convert to Hugging Face Dataset\n",
    "dataset = Dataset.from_list(formatted_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e4cd62f",
   "metadata": {
    "papermill": {
     "duration": 0.00786,
     "end_time": "2025-02-19T17:26:06.042835",
     "exception": false,
     "start_time": "2025-02-19T17:26:06.034975",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Tokenize Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5191ca9d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:26:06.058902Z",
     "iopub.status.busy": "2025-02-19T17:26:06.058663Z",
     "iopub.status.idle": "2025-02-19T17:26:09.137965Z",
     "shell.execute_reply": "2025-02-19T17:26:09.137231Z"
    },
    "papermill": {
     "duration": 3.088728,
     "end_time": "2025-02-19T17:26:09.139234",
     "exception": false,
     "start_time": "2025-02-19T17:26:06.050506",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "002fb9e7c0ae43889fdd51a553b713a8",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Map:   0%|          | 0/534 [00:00<?, ? examples/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def tokenize_function(example):\n",
    "    tokens = tokenizer(example['prompt'], \n",
    "                       add_special_tokens=False,\n",
    "                       padding=\"max_length\", \n",
    "                       truncation=True, \n",
    "                       max_length=2048)\n",
    "    \n",
    "    tokens['labels'] = [-100 if token == tokenizer.pad_token_id else token for token in tokens['input_ids']]\n",
    "\n",
    "    return tokens\n",
    "\n",
    "# Apply tokenization \n",
    "tokenized_dataset_DavidCameron = dataset.map(tokenize_function, batched=True)\n",
    "tokenized_dataset_DavidCameron = tokenized_dataset_DavidCameron.remove_columns(['prompt'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "398a9faa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:26:09.157205Z",
     "iopub.status.busy": "2025-02-19T17:26:09.156968Z",
     "iopub.status.idle": "2025-02-19T17:26:10.876813Z",
     "shell.execute_reply": "2025-02-19T17:26:10.875874Z"
    },
    "papermill": {
     "duration": 1.729617,
     "end_time": "2025-02-19T17:26:10.878345",
     "exception": false,
     "start_time": "2025-02-19T17:26:09.148728",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Max Length: 2048 | Min Length: 2048 | Avg Length: 2048.0\n"
     ]
    }
   ],
   "source": [
    "# Plot Distribution of Token Lenghts\n",
    "token_lengths = [len(sample[\"input_ids\"]) for sample in tokenized_dataset_DavidCameron]\n",
    "\n",
    "# Plot histogram\n",
    "plt.figure(figsize=(8, 5))\n",
    "plt.hist(token_lengths, bins=50, color=\"blue\", edgecolor=\"black\", alpha=0.7)\n",
    "plt.xlabel(\"Token Length\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.title(\"Distribution of Tokenized Sequence Lengths\")\n",
    "plt.axvline(x=4096, color=\"red\", linestyle=\"dashed\", label=\"Max Length (4096)\")\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n",
    "print(f\"Max Length: {max(token_lengths)} | Min Length: {min(token_lengths)} | Avg Length: {sum(token_lengths)/len(token_lengths)}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd2ea8f9",
   "metadata": {
    "id": "MxR8Gwq_RzBC",
    "papermill": {
     "duration": 0.008222,
     "end_time": "2025-02-19T17:26:10.895592",
     "exception": false,
     "start_time": "2025-02-19T17:26:10.887370",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Model Setup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fc226a28",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:26:10.913632Z",
     "iopub.status.busy": "2025-02-19T17:26:10.913308Z",
     "iopub.status.idle": "2025-02-19T17:27:15.048176Z",
     "shell.execute_reply": "2025-02-19T17:27:15.047424Z"
    },
    "id": "t5O7mYRNOXb6",
    "outputId": "99c584fb-ea1e-444f-c661-aa2a22be38b0",
    "papermill": {
     "duration": 64.145391,
     "end_time": "2025-02-19T17:27:15.049826",
     "exception": false,
     "start_time": "2025-02-19T17:26:10.904435",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "0725f25b955845a7aae9099eea0f5e89",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/877 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f1e9bae3f6744cd4b7974ac6e4907f97",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "model.safetensors:   0%|          | 0.00/2.47G [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9abda8355e9842c598df749a6c1b648a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "generation_config.json:   0%|          | 0.00/189 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Optimize Performance with Configurations\n",
    "bnb_config = BitsAndBytesConfig(\n",
    "    load_in_4bit=True,                      # Load model in 4bit, to redeuce memory and computational requirements\n",
    "    bnb_4bit_use_double_quant=True,         # Double quantization, further compress the model weights\n",
    "    bnb_4bit_quant_type=\"nf4\",              # Quantization type = nf4\n",
    "    bnb_4bit_compute_dtype=torch.bfloat16,  # Compute in 16bit format, to speed up computation\n",
    ")\n",
    "\n",
    "model = AutoModelForCausalLM.from_pretrained(\n",
    "    BASE_MODEL_ID,\n",
    "    quantization_config=bnb_config,\n",
    "    device_map=\"auto\"  # Automatically assigns model to GPU if available\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ef8f17de",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:27:15.068852Z",
     "iopub.status.busy": "2025-02-19T17:27:15.068605Z",
     "iopub.status.idle": "2025-02-19T17:27:15.102898Z",
     "shell.execute_reply": "2025-02-19T17:27:15.102010Z"
    },
    "id": "49St8Yk2a0Gx",
    "papermill": {
     "duration": 0.045047,
     "end_time": "2025-02-19T17:27:15.104233",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.059186",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Apply PEFT (Adapter, LoRA and others)\n",
    "model.gradient_checkpointing_enable()               # Reduce memory usage by saving intermediate activations\n",
    "model = prepare_model_for_kbit_training(model)      # Prepare model for kbit training to reduce memory usage"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4758085a",
   "metadata": {
    "id": "ej943P1ic5D4",
    "papermill": {
     "duration": 0.008643,
     "end_time": "2025-02-19T17:27:15.121657",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.113014",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Inspect Model Architecture\n",
    "\n",
    "The attention mechanism in this model is implemented with **modular projections**, as opposed to a **combined module**: `query_key_value` .\n",
    "The model uses distinct linear layers for the query (q_proj), key (k_proj), and value (v_proj) projections"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "2d27aa67",
   "metadata": {
    "collapsed": true,
    "execution": {
     "iopub.execute_input": "2025-02-19T17:27:15.139372Z",
     "iopub.status.busy": "2025-02-19T17:27:15.139115Z",
     "iopub.status.idle": "2025-02-19T17:27:15.144048Z",
     "shell.execute_reply": "2025-02-19T17:27:15.143292Z"
    },
    "id": "ixxwyp4Ucc6h",
    "jupyter": {
     "outputs_hidden": true
    },
    "outputId": "660e1a47-c111-4411-ac7b-c9072f8ca8c5",
    "papermill": {
     "duration": 0.015088,
     "end_time": "2025-02-19T17:27:15.145151",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.130063",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "LlamaForCausalLM(\n",
      "  (model): LlamaModel(\n",
      "    (embed_tokens): Embedding(128256, 2048)\n",
      "    (layers): ModuleList(\n",
      "      (0-15): 16 x LlamaDecoderLayer(\n",
      "        (self_attn): LlamaSdpaAttention(\n",
      "          (q_proj): Linear4bit(in_features=2048, out_features=2048, bias=False)\n",
      "          (k_proj): Linear4bit(in_features=2048, out_features=512, bias=False)\n",
      "          (v_proj): Linear4bit(in_features=2048, out_features=512, bias=False)\n",
      "          (o_proj): Linear4bit(in_features=2048, out_features=2048, bias=False)\n",
      "          (rotary_emb): LlamaRotaryEmbedding()\n",
      "        )\n",
      "        (mlp): LlamaMLP(\n",
      "          (gate_proj): Linear4bit(in_features=2048, out_features=8192, bias=False)\n",
      "          (up_proj): Linear4bit(in_features=2048, out_features=8192, bias=False)\n",
      "          (down_proj): Linear4bit(in_features=8192, out_features=2048, bias=False)\n",
      "          (act_fn): SiLU()\n",
      "        )\n",
      "        (input_layernorm): LlamaRMSNorm((2048,), eps=1e-05)\n",
      "        (post_attention_layernorm): LlamaRMSNorm((2048,), eps=1e-05)\n",
      "      )\n",
      "    )\n",
      "    (norm): LlamaRMSNorm((2048,), eps=1e-05)\n",
      "    (rotary_emb): LlamaRotaryEmbedding()\n",
      "  )\n",
      "  (lm_head): Linear(in_features=2048, out_features=128256, bias=False)\n",
      ")\n"
     ]
    }
   ],
   "source": [
    "# Inspect Model Architecture\n",
    "print(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3148901",
   "metadata": {
    "id": "zd0ezAzCc8YR",
    "papermill": {
     "duration": 0.00854,
     "end_time": "2025-02-19T17:27:15.162305",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.153765",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Define LoRA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5819cc1f",
   "metadata": {
    "collapsed": true,
    "execution": {
     "iopub.execute_input": "2025-02-19T17:27:15.180006Z",
     "iopub.status.busy": "2025-02-19T17:27:15.179780Z",
     "iopub.status.idle": "2025-02-19T17:27:15.234167Z",
     "shell.execute_reply": "2025-02-19T17:27:15.233603Z"
    },
    "id": "suhZIIp7kaWn",
    "jupyter": {
     "outputs_hidden": true
    },
    "papermill": {
     "duration": 0.064552,
     "end_time": "2025-02-19T17:27:15.235337",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.170785",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Define LoRA configuration\n",
    "lora_config = LoraConfig(\n",
    "    r=8,                                  # Rank of the low-rank matrices, lower ranks -> lower computational load & memory usage\n",
    "    lora_alpha=32,                        # Scaling factor\n",
    "    target_modules=[\"q_proj\", \"v_proj\"],  # Specifies the modules that should be adapted using LoRA (*Depends on model architecture)\n",
    "    lora_dropout=0.1,                     # A Regularization technique used to prevent overfitting\n",
    "    bias=\"none\",                          # specifies that no additional bias terms should be added\n",
    "    task_type=\"CAUSAL_LM\"                 # Define the model: one that is 'predicting the next word'\n",
    ")\n",
    "\n",
    "# Apply LoRA to the model\n",
    "model = get_peft_model(model, lora_config)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e15cfd59",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:27:15.253305Z",
     "iopub.status.busy": "2025-02-19T17:27:15.253082Z",
     "iopub.status.idle": "2025-02-19T17:27:15.258812Z",
     "shell.execute_reply": "2025-02-19T17:27:15.258015Z"
    },
    "id": "BWB1QURMa9La",
    "outputId": "0ee74809-aa4c-4ff9-fe8a-0691eae2f583",
    "papermill": {
     "duration": 0.016063,
     "end_time": "2025-02-19T17:27:15.260035",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.243972",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "trainable params: 851968 || all params: 750127104 || trainable%: 0.1135764852992167\n"
     ]
    }
   ],
   "source": [
    "def print_trainable_parameters(model):\n",
    "    \"\"\"\n",
    "    Prints the number of trainable parameters in the model.\n",
    "    \"\"\"\n",
    "    trainable_params = 0\n",
    "    all_param = 0\n",
    "    for _, param in model.named_parameters():\n",
    "        all_param += param.numel()\n",
    "        if param.requires_grad:\n",
    "            trainable_params += param.numel()\n",
    "    print(f\"trainable params: {trainable_params} || all params: {all_param} || trainable%: {100 * trainable_params / all_param}\")\n",
    "\n",
    "print_trainable_parameters(model)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c7d3a14",
   "metadata": {
    "id": "dxJCSt_-jSGR",
    "papermill": {
     "duration": 0.008461,
     "end_time": "2025-02-19T17:27:15.277137",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.268676",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Define Training Parameters\n",
    "Define training parameters, including batch size, learning rate, and the number of training epochs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3c011d9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:27:15.295255Z",
     "iopub.status.busy": "2025-02-19T17:27:15.295050Z",
     "iopub.status.idle": "2025-02-19T17:27:15.298027Z",
     "shell.execute_reply": "2025-02-19T17:27:15.297486Z"
    },
    "id": "apUq0LYGmBJ2",
    "papermill": {
     "duration": 0.013431,
     "end_time": "2025-02-19T17:27:15.299200",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.285769",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#training_args = TrainingArguments(\n",
    "#    output_dir=\"outputs\",\n",
    "#    overwrite_output_dir=True,\n",
    "#    save_steps=500,                    # Save model periodically\n",
    "#    save_total_limit=2,                 # Keep only the last 2 checkpoints\n",
    "#    logging_steps=50,                   # Log metrics every 50 steps\n",
    "#    report_to=\"none\",                   # Disable WandB unless needed\n",
    "#    \n",
    "#    per_device_train_batch_size=2,      # Increase batch size as T4 can handle it\n",
    "#    gradient_accumulation_steps=8,      # Helps with memory efficiency\n",
    "#    num_train_epochs=3,                 # Number of passes through the dataset\n",
    "#    max_grad_norm=1.0,                   # Clip gradients for stability\n",
    "#    \n",
    "#    learning_rate=1e-5,                 # Standard LR for fine-tuning\n",
    "#   lr_scheduler_type=\"cosine\",         # Cosine decay scheduler for stable training\n",
    "#    warmup_steps=200,                   # Helps with early-stage stability\n",
    "#    weight_decay=0.01,                   # Regularization\n",
    "#    \n",
    "#    fp16=True,                          # Mixed precision for better performance\n",
    "#    gradient_checkpointing=True,        # Reduce memory usage\n",
    "#    optim=\"paged_adamw_8bit\",           # Efficient optimizer\n",
    "#)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "addf94d5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:27:15.317222Z",
     "iopub.status.busy": "2025-02-19T17:27:15.317019Z",
     "iopub.status.idle": "2025-02-19T17:27:15.349731Z",
     "shell.execute_reply": "2025-02-19T17:27:15.348939Z"
    },
    "papermill": {
     "duration": 0.043363,
     "end_time": "2025-02-19T17:27:15.351263",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.307900",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "training_args = TrainingArguments(\n",
    "    output_dir=\"outputs\",\n",
    "    optim=\"paged_adamw_8bit\",\n",
    "    eval_strategy=\"no\",\n",
    "    #report_to=\"none\",                       # Disable WandB integration\n",
    "    per_device_train_batch_size=3,          # Adjust the batch size\n",
    "    gradient_accumulation_steps=4,          # Increaset gradient-steps to reduce memory usage\n",
    "    warmup_steps=2,                         # Helps to stabilize training\n",
    "    num_train_epochs=3,                     # Control duration of Training (use either 'max_steps' or 'num_train_epochs')\n",
    "    learning_rate=2e-5,\n",
    "    logging_steps=10,                       # Frequency of Training metrics logs for detailed feedback on process\n",
    "    weight_decay=0.01,\n",
    "\n",
    "    fp16=True,                              # Enable mixed precision training\n",
    "    gradient_checkpointing=True,            # Storing only a subset of activations\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "295a9650",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:27:15.369742Z",
     "iopub.status.busy": "2025-02-19T17:27:15.369517Z",
     "iopub.status.idle": "2025-02-19T17:27:15.555283Z",
     "shell.execute_reply": "2025-02-19T17:27:15.554370Z"
    },
    "id": "cM0vXRznl7CO",
    "papermill": {
     "duration": 0.196664,
     "end_time": "2025-02-19T17:27:15.556858",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.360194",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Initialize the Trainer\n",
    "trainer = Trainer(\n",
    "    model=model,\n",
    "    args= training_args,                                 # input Training Arguments\n",
    "    train_dataset= tokenized_dataset_DavidCameron,           # input Tokenized Dataset\n",
    "    data_collator= transformers.DataCollatorForLanguageModeling(tokenizer, mlm=False),   # Format batches of data for training\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a5e349d",
   "metadata": {
    "id": "JDekRjeKyCz9",
    "papermill": {
     "duration": 0.009938,
     "end_time": "2025-02-19T17:27:15.577758",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.567820",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Fine-Tune the Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "66b7dce0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:27:15.598952Z",
     "iopub.status.busy": "2025-02-19T17:27:15.598711Z",
     "iopub.status.idle": "2025-02-19T17:27:17.058479Z",
     "shell.execute_reply": "2025-02-19T17:27:17.057536Z"
    },
    "papermill": {
     "duration": 1.471938,
     "end_time": "2025-02-19T17:27:17.059872",
     "exception": false,
     "start_time": "2025-02-19T17:27:15.587934",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mwandb\u001b[0m: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mhaoting-chan\u001b[0m (\u001b[33mhaoting-chan-gesis\u001b[0m). Use \u001b[1m`wandb login --relogin`\u001b[0m to force relogin\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m If you're specifying your api key in code, ensure this code is not shared publicly.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m Consider setting the WANDB_API_KEY environment variable, or running `wandb login` from the command line.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Log in to W&B\n",
    "import wandb\n",
    "\n",
    "wandb_api_key = user_secrets.get_secret(\"wand_API_Key\")\n",
    "\n",
    "wandb.login(key=wandb_api_key)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a54965a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T17:27:17.079513Z",
     "iopub.status.busy": "2025-02-19T17:27:17.079231Z",
     "iopub.status.idle": "2025-02-19T18:06:35.878115Z",
     "shell.execute_reply": "2025-02-19T18:06:35.877341Z"
    },
    "id": "EbVIQpWNoirt",
    "outputId": "70c66134-e2dd-4ca5-9f95-a1f16ad00d17",
    "papermill": {
     "duration": 2358.810077,
     "end_time": "2025-02-19T18:06:35.879505",
     "exception": false,
     "start_time": "2025-02-19T17:27:17.069428",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m The `run_name` is currently set to the same value as `TrainingArguments.output_dir`. If this was not intended, please specify a different run name by setting the `TrainingArguments.run_name` parameter.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Tracking run with wandb version 0.19.1\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run data is saved locally in \u001b[35m\u001b[1m/kaggle/working/wandb/run-20250219_172717-qfhfpnbc\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run \u001b[1m`wandb offline`\u001b[0m to turn off syncing.\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Syncing run \u001b[33moutputs\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at \u001b[34m\u001b[4mhttps://wandb.ai/haoting-chan-gesis/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run at \u001b[34m\u001b[4mhttps://wandb.ai/haoting-chan-gesis/huggingface/runs/qfhfpnbc\u001b[0m\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='132' max='132' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [132/132 39:01, Epoch 2/3]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>11.567000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20</td>\n",
       "      <td>11.401400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>30</td>\n",
       "      <td>11.390100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>40</td>\n",
       "      <td>11.167000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>10.575200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>60</td>\n",
       "      <td>10.990200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>70</td>\n",
       "      <td>10.926000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>80</td>\n",
       "      <td>10.851700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>90</td>\n",
       "      <td>10.244200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>10.682700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>110</td>\n",
       "      <td>10.811400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>120</td>\n",
       "      <td>10.725300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>130</td>\n",
       "      <td>10.725700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "TrainOutput(global_step=132, training_loss=10.923327431534275, metrics={'train_runtime': 2358.4156, 'train_samples_per_second': 0.679, 'train_steps_per_second': 0.056, 'total_flos': 1.881446377586688e+16, 'train_loss': 10.923327431534275, 'epoch': 2.943820224719101})"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Train the model\n",
    "model.config.use_cache = False        # disable caching\n",
    "trainer.train()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "9aa6f74a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T18:06:35.900946Z",
     "iopub.status.busy": "2025-02-19T18:06:35.900686Z",
     "iopub.status.idle": "2025-02-19T18:06:36.902316Z",
     "shell.execute_reply": "2025-02-19T18:06:36.901390Z"
    },
    "papermill": {
     "duration": 1.013657,
     "end_time": "2025-02-19T18:06:36.903865",
     "exception": false,
     "start_time": "2025-02-19T18:06:35.890208",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('./kaggle/working/fine-tuned-llama_DavidCameron/tokenizer_config.json',\n",
       " './kaggle/working/fine-tuned-llama_DavidCameron/special_tokens_map.json',\n",
       " './kaggle/working/fine-tuned-llama_DavidCameron/tokenizer.json')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Save the Fine-Tuned Model\n",
    "model.save_pretrained(\"./kaggle/working/fine-tuned-llama_DavidCameron\")\n",
    "tokenizer.save_pretrained(\"./kaggle/working/fine-tuned-llama_DavidCameron\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "13cb4a8b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T18:06:36.926021Z",
     "iopub.status.busy": "2025-02-19T18:06:36.925788Z",
     "iopub.status.idle": "2025-02-19T18:06:39.761730Z",
     "shell.execute_reply": "2025-02-19T18:06:39.760932Z"
    },
    "papermill": {
     "duration": 2.847757,
     "end_time": "2025-02-19T18:06:39.763070",
     "exception": false,
     "start_time": "2025-02-19T18:06:36.915313",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[34m\u001b[1mwandb\u001b[0m:                                                                                \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run history:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:         train/epoch ▁▂▂▃▃▄▄▅▆▆▇▇██\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:   train/global_step ▁▂▂▃▃▄▄▅▆▆▇▇██\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:     train/grad_norm ▇█▆▆▅▅▅▄▁▄▃▄▃\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: train/learning_rate █▇▇▆▆▅▄▄▃▃▂▂▁\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:          train/loss █▇▇▆▃▅▅▄▁▃▄▄▄\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Run summary:\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:               total_flos 1.881446377586688e+16\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:              train/epoch 2.94382\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:        train/global_step 132\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:          train/grad_norm 2.07151\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:      train/learning_rate 0.0\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:               train/loss 10.7257\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:               train_loss 10.92333\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:            train_runtime 2358.4156\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: train_samples_per_second 0.679\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m:   train_steps_per_second 0.056\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: 🚀 View run \u001b[33moutputs\u001b[0m at: \u001b[34m\u001b[4mhttps://wandb.ai/haoting-chan-gesis/huggingface/runs/qfhfpnbc\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: ⭐️ View project at: \u001b[34m\u001b[4mhttps://wandb.ai/haoting-chan-gesis/huggingface\u001b[0m\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: Find logs at: \u001b[35m\u001b[1m./wandb/run-20250219_172717-qfhfpnbc/logs\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "# Save the fine-tuned model\n",
    "wandb.finish()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef00ab9e",
   "metadata": {
    "papermill": {
     "duration": 0.01041,
     "end_time": "2025-02-19T18:06:39.784088",
     "exception": false,
     "start_time": "2025-02-19T18:06:39.773678",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Run Inference\n",
    "\n",
    "After training, when you're ready to perform inference, set use_cache back to `True`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "7a4b81a6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-19T18:06:39.805545Z",
     "iopub.status.busy": "2025-02-19T18:06:39.805281Z",
     "iopub.status.idle": "2025-02-19T18:06:56.170078Z",
     "shell.execute_reply": "2025-02-19T18:06:56.169213Z"
    },
    "papermill": {
     "duration": 16.376939,
     "end_time": "2025-02-19T18:06:56.171411",
     "exception": false,
     "start_time": "2025-02-19T18:06:39.794472",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Device set to use cuda:0\n",
      "The model 'PeftModelForCausalLM' is not supported for text-generation. Supported models are ['BartForCausalLM', 'BertLMHeadModel', 'BertGenerationDecoder', 'BigBirdForCausalLM', 'BigBirdPegasusForCausalLM', 'BioGptForCausalLM', 'BlenderbotForCausalLM', 'BlenderbotSmallForCausalLM', 'BloomForCausalLM', 'CamembertForCausalLM', 'LlamaForCausalLM', 'CodeGenForCausalLM', 'CohereForCausalLM', 'CpmAntForCausalLM', 'CTRLLMHeadModel', 'Data2VecTextForCausalLM', 'DbrxForCausalLM', 'ElectraForCausalLM', 'ErnieForCausalLM', 'FalconForCausalLM', 'FalconMambaForCausalLM', 'FuyuForCausalLM', 'GemmaForCausalLM', 'Gemma2ForCausalLM', 'GitForCausalLM', 'GlmForCausalLM', 'GPT2LMHeadModel', 'GPT2LMHeadModel', 'GPTBigCodeForCausalLM', 'GPTNeoForCausalLM', 'GPTNeoXForCausalLM', 'GPTNeoXJapaneseForCausalLM', 'GPTJForCausalLM', 'GraniteForCausalLM', 'GraniteMoeForCausalLM', 'JambaForCausalLM', 'JetMoeForCausalLM', 'LlamaForCausalLM', 'MambaForCausalLM', 'Mamba2ForCausalLM', 'MarianForCausalLM', 'MBartForCausalLM', 'MegaForCausalLM', 'MegatronBertForCausalLM', 'MistralForCausalLM', 'MixtralForCausalLM', 'MllamaForCausalLM', 'MoshiForCausalLM', 'MptForCausalLM', 'MusicgenForCausalLM', 'MusicgenMelodyForCausalLM', 'MvpForCausalLM', 'NemotronForCausalLM', 'OlmoForCausalLM', 'Olmo2ForCausalLM', 'OlmoeForCausalLM', 'OpenLlamaForCausalLM', 'OpenAIGPTLMHeadModel', 'OPTForCausalLM', 'PegasusForCausalLM', 'PersimmonForCausalLM', 'PhiForCausalLM', 'Phi3ForCausalLM', 'PhimoeForCausalLM', 'PLBartForCausalLM', 'ProphetNetForCausalLM', 'QDQBertLMHeadModel', 'Qwen2ForCausalLM', 'Qwen2MoeForCausalLM', 'RecurrentGemmaForCausalLM', 'ReformerModelWithLMHead', 'RemBertForCausalLM', 'RobertaForCausalLM', 'RobertaPreLayerNormForCausalLM', 'RoCBertForCausalLM', 'RoFormerForCausalLM', 'RwkvForCausalLM', 'Speech2Text2ForCausalLM', 'StableLmForCausalLM', 'Starcoder2ForCausalLM', 'TransfoXLLMHeadModel', 'TrOCRForCausalLM', 'WhisperForCausalLM', 'XGLMForCausalLM', 'XLMWithLMHeadModel', 'XLMProphetNetForCausalLM', 'XLMRobertaForCausalLM', 'XLMRobertaXLForCausalLM', 'XLNetLMHeadModel', 'XmodForCausalLM', 'ZambaForCausalLM'].\n",
      "Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[{'generated_text': 'Should the UK rejoin the EU? - a poll of 1,000 people\\n\\nThe United Kingdom voted to leave the European Union in a June 2016 referendum. However, the UK is not a member of the EU, and there are ongoing debates about whether it should rejoin the bloc.\\n\\nHere is a poll of 1,000 people:\\n\\nThe UK voted to leave the EU in a June 2016 referendum. However, the UK is not a member of the EU,'},\n",
       " {'generated_text': \"Should the UK rejoin the EU? If so, when? The answer is not a simple yes or no, and depends on a variety of factors. In this article, we will explore the pros and cons of the UK rejoining the EU, and examine the key decisions that led to the UK's departure. We will also discuss the potential risks and benefits of the UK rejoining the EU, and examine the arguments for and against. We will also look at the potential benefits of a free\"},\n",
       " {'generated_text': \"Should the UK rejoin the EU? A poll for The Guardian\\nThe UK's future is uncertain, and the question of whether it should rejoin the EU remains a contentious issue. Here's a summary of the key arguments for and against:\\nArguments for rejoining the EU:\\n1. Economic benefits: The UK has benefited from EU membership, particularly in terms of trade and economic integration. Rejoining could bring new economic opportunities.\\n2. Environmental protection: The EU's environmental policies have improved the\"},\n",
       " {'generated_text': \"Should the UK rejoin the EU? There are many different opinions on this issue, and it's a complex decision that involves a lot of factors. Here are some points to consider:\\n\\nPros:\\n\\n1. **Economic benefits**: The UK would benefit from increased trade and investment with the EU, which could lead to economic growth and job creation.\\n2. **Environmental protection**: The UK has signed the Paris Agreement, which aims to reduce greenhouse gas emissions and mitigate climate change. Rejoining the EU\"},\n",
       " {'generated_text': 'Should the UK rejoin the EU? Should the UK leave the EU? Or should the UK remain a non-EU country? The debate is ongoing and contentious. Here are the arguments for and against each option.\\n\\n### Rejoin the EU\\n\\n**Arguments For Rejoining the EU:**\\n\\n1. **Economic Benefits:** A UK rejoining the EU could lead to increased trade and economic opportunities, which could help boost the economy.\\n2. **Reduced Trade Barriers:** Rejoining the'}]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.config.use_cache = True\n",
    "\n",
    "# Run inference on the model\n",
    "model.eval()  # Set model to evaluation mode\n",
    "\n",
    "# Define the pipeline\n",
    "text_generator = pipeline(\"text-generation\", model=model, tokenizer=tokenizer)\n",
    "\n",
    "# Generate text\n",
    "text_generator(\"Should the UK rejoin the EU?\", max_length=100, num_return_sequences=5)"
   ]
  }
 ],
 "metadata": {
  "accelerator": "GPU",
  "colab": {
   "gpuType": "T4",
   "provenance": [],
   "toc_visible": true
  },
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 6694646,
     "sourceId": 10787900,
     "sourceType": "datasetVersion"
    },
    {
     "sourceId": 222531414,
     "sourceType": "kernelVersion"
    },
    {
     "sourceId": 223276368,
     "sourceType": "kernelVersion"
    }
   ],
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 2487.722414,
   "end_time": "2025-02-19T18:06:59.636463",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-02-19T17:25:31.914049",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "002fb9e7c0ae43889fdd51a553b713a8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_6941d146bbde439fa26e2285283880e2",
        "IPY_MODEL_cd8118de9c4a46d0995688a84c0017c4",
        "IPY_MODEL_acabeae586d64a459556cf0f61057af7"
       ],
       "layout": "IPY_MODEL_cf1eda7a0ff54a46829000d966c0ef51",
       "tabbable": null,
       "tooltip": null
      }
     },
     "046f800efae341f98f267ef3d3c5089c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "06a3934c0ef344c18d45e22a63b60cd5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "0725f25b955845a7aae9099eea0f5e89": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_088cbd9635b245c09c5abbd47dc88f7a",
        "IPY_MODEL_5569e2bf07aa4d2cb66bb907a921f275",
        "IPY_MODEL_1fa0cd6281cb4128affce596bc081cbe"
       ],
       "layout": "IPY_MODEL_cc08e49704ab4defa048a7c6b0a05387",
       "tabbable": null,
       "tooltip": null
      }
     },
     "077069b90d02483397dadf9767653914": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_257356b8b51b45f5bed301ec8ec74c01",
       "max": 54528.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_c34bf1b4138d4dbe83a0dc3fbcad0cef",
       "tabbable": null,
       "tooltip": null,
       "value": 54528.0
      }
     },
     "088cbd9635b245c09c5abbd47dc88f7a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_be1885c8a7044e5b862b4f170b7836c9",
       "placeholder": "​",
       "style": "IPY_MODEL_f1cb7ba0902b4216bc26a99100691165",
       "tabbable": null,
       "tooltip": null,
       "value": "config.json: 100%"
      }
     },
     "0ca4b65fe845488f8efcaf9c278205d9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0e92ef5d30094926a5189ecf894a1924": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a3a57fa4acdb4ddeb993cb35134d7c1f",
       "placeholder": "​",
       "style": "IPY_MODEL_9202f97833154e1a9d823f86fb3d91a3",
       "tabbable": null,
       "tooltip": null,
       "value": " 54.5k/54.5k [00:00&lt;00:00, 5.07MB/s]"
      }
     },
     "1173402b74244214a24273158d41e818": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "150b35d23a8a4174910946f24b2ef3c9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1bb57d46b71941dc87e97c2009d0a05e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1fa0cd6281cb4128affce596bc081cbe": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_150b35d23a8a4174910946f24b2ef3c9",
       "placeholder": "​",
       "style": "IPY_MODEL_8b09c44daa5647499cf4f3a9e403cbd1",
       "tabbable": null,
       "tooltip": null,
       "value": " 877/877 [00:00&lt;00:00, 94.3kB/s]"
      }
     },
     "21b9aeee86404b7393fcee8cbc96a561": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_27e75cac9ea54ad4b1b47e65796629f9",
       "max": 9085657.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_aa7a2413d9f74f19a514d95d6c42e458",
       "tabbable": null,
       "tooltip": null,
       "value": 9085657.0
      }
     },
     "23ecd1de007b4f9482184b0a4273fe9a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4fe0f7caf3ac45bbb395e4c0956c2435",
       "placeholder": "​",
       "style": "IPY_MODEL_5e06fc0607ed4f5490c63e82ba2cbf72",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer_config.json: 100%"
      }
     },
     "257356b8b51b45f5bed301ec8ec74c01": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "27e75cac9ea54ad4b1b47e65796629f9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2d096a4f4b45488eaf19b458f85a56ec": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2deef5b27790434aba5728b460a5fa38": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2f73487b0af14fadb7a1b900bd285d01": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "361fcc791bf2442793c34db3082bc835": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3644319aa9154b4ba5fff91951e15c08": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3d819faeb5f844edaae251840630071c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4854f4599fcc431093c629502b4debf1",
       "max": 189.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_a6c0e67a32ca4b658dd4afea03c6ffdb",
       "tabbable": null,
       "tooltip": null,
       "value": 189.0
      }
     },
     "43a2577e6b8047e28e7514116d2c060a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_d7057bca8b6948dabf2edc6d111615e5",
        "IPY_MODEL_21b9aeee86404b7393fcee8cbc96a561",
        "IPY_MODEL_63b41470a1c54506a21d99072c5f539c"
       ],
       "layout": "IPY_MODEL_9c0adf5fde7f4fd094cc2cb8140ca852",
       "tabbable": null,
       "tooltip": null
      }
     },
     "4854f4599fcc431093c629502b4debf1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "495f160ecf174b10812a05151f58c25f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "4b6a94afe74f4272924f75eb7d61531f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4fe0f7caf3ac45bbb395e4c0956c2435": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5288b7ec8f1a4c16959a0e9f54268e67": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "544d8e9a08b1460480fbbf6e561daf67": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5569e2bf07aa4d2cb66bb907a921f275": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5a8a97ad1bab4e3f88591f4939d372f7",
       "max": 877.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_7c4197c915184713afe8b4d50d84bc26",
       "tabbable": null,
       "tooltip": null,
       "value": 877.0
      }
     },
     "59205972c665456e81512cff1b5827a0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b3624211529947ff8951bdedaacb5924",
       "max": 2471645608.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_5288b7ec8f1a4c16959a0e9f54268e67",
       "tabbable": null,
       "tooltip": null,
       "value": 2471645608.0
      }
     },
     "5a8a97ad1bab4e3f88591f4939d372f7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5e06fc0607ed4f5490c63e82ba2cbf72": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "5f7f9346ff9141f19f0694b36a94ce6c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_23ecd1de007b4f9482184b0a4273fe9a",
        "IPY_MODEL_077069b90d02483397dadf9767653914",
        "IPY_MODEL_0e92ef5d30094926a5189ecf894a1924"
       ],
       "layout": "IPY_MODEL_b2325d7f8a354aae8927cefbd038aad6",
       "tabbable": null,
       "tooltip": null
      }
     },
     "63b41470a1c54506a21d99072c5f539c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_0ca4b65fe845488f8efcaf9c278205d9",
       "placeholder": "​",
       "style": "IPY_MODEL_3644319aa9154b4ba5fff91951e15c08",
       "tabbable": null,
       "tooltip": null,
       "value": " 9.09M/9.09M [00:00&lt;00:00, 10.2MB/s]"
      }
     },
     "649f59754ce24433802b2d8be2d7ac80": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6941d146bbde439fa26e2285283880e2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_93b8b3a65c9e46f188161c838cc35a31",
       "placeholder": "​",
       "style": "IPY_MODEL_f4c0eb32777e4d7aacffac96303c88ee",
       "tabbable": null,
       "tooltip": null,
       "value": "Map: 100%"
      }
     },
     "7022932897fa415e9bca9cab5f81ce9c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4b6a94afe74f4272924f75eb7d61531f",
       "placeholder": "​",
       "style": "IPY_MODEL_bebaac360e39426a8c919382589cb644",
       "tabbable": null,
       "tooltip": null,
       "value": "generation_config.json: 100%"
      }
     },
     "75b536c87766438fa515d6dbc7645ece": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "780eba3cf2a04586aaedf0088a657b2d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "7c4197c915184713afe8b4d50d84bc26": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "8430bbdb897349fcbbe7ee4a4d578a79": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8b09c44daa5647499cf4f3a9e403cbd1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8bd4cdbb961b482aaee38101eb95a2cc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9202f97833154e1a9d823f86fb3d91a3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "93b8b3a65c9e46f188161c838cc35a31": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "99a46a6e8d574eb89b6f15ac08d38e6e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2f73487b0af14fadb7a1b900bd285d01",
       "max": 296.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_780eba3cf2a04586aaedf0088a657b2d",
       "tabbable": null,
       "tooltip": null,
       "value": 296.0
      }
     },
     "9abda8355e9842c598df749a6c1b648a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7022932897fa415e9bca9cab5f81ce9c",
        "IPY_MODEL_3d819faeb5f844edaae251840630071c",
        "IPY_MODEL_c33307f394d4415f9f6d9b613760485b"
       ],
       "layout": "IPY_MODEL_9bc85d4715464f60acc1e24156912d93",
       "tabbable": null,
       "tooltip": null
      }
     },
     "9bc85d4715464f60acc1e24156912d93": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9c0adf5fde7f4fd094cc2cb8140ca852": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9dc4cdb52c0b4d33a0fb424f5196f6d8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2d096a4f4b45488eaf19b458f85a56ec",
       "placeholder": "​",
       "style": "IPY_MODEL_c9af779244c74ae2bab15c8cefa7b485",
       "tabbable": null,
       "tooltip": null,
       "value": "model.safetensors: 100%"
      }
     },
     "a3a57fa4acdb4ddeb993cb35134d7c1f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a6c0e67a32ca4b658dd4afea03c6ffdb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "a941eb1182a946ad94ea3ce1b2a0ce67": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "aa7a2413d9f74f19a514d95d6c42e458": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "acabeae586d64a459556cf0f61057af7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a941eb1182a946ad94ea3ce1b2a0ce67",
       "placeholder": "​",
       "style": "IPY_MODEL_495f160ecf174b10812a05151f58c25f",
       "tabbable": null,
       "tooltip": null,
       "value": " 534/534 [00:02&lt;00:00, 185.44 examples/s]"
      }
     },
     "b13448f97c7f4fde913c33ca5330ee33": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_bd9f0232ef204c06843a4b57aab299d3",
        "IPY_MODEL_99a46a6e8d574eb89b6f15ac08d38e6e",
        "IPY_MODEL_d2ca5f97453040ff8d3b29be7858eca6"
       ],
       "layout": "IPY_MODEL_2deef5b27790434aba5728b460a5fa38",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b2325d7f8a354aae8927cefbd038aad6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b3624211529947ff8951bdedaacb5924": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bd9f0232ef204c06843a4b57aab299d3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_649f59754ce24433802b2d8be2d7ac80",
       "placeholder": "​",
       "style": "IPY_MODEL_d3fb05f882584c14b81fa897d0161dec",
       "tabbable": null,
       "tooltip": null,
       "value": "special_tokens_map.json: 100%"
      }
     },
     "be1885c8a7044e5b862b4f170b7836c9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bebaac360e39426a8c919382589cb644": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c33307f394d4415f9f6d9b613760485b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1173402b74244214a24273158d41e818",
       "placeholder": "​",
       "style": "IPY_MODEL_8bd4cdbb961b482aaee38101eb95a2cc",
       "tabbable": null,
       "tooltip": null,
       "value": " 189/189 [00:00&lt;00:00, 18.8kB/s]"
      }
     },
     "c34bf1b4138d4dbe83a0dc3fbcad0cef": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "c9af779244c74ae2bab15c8cefa7b485": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "cc08e49704ab4defa048a7c6b0a05387": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "cd8118de9c4a46d0995688a84c0017c4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f5cd82674dbc4f8d892bd4e4c5e76565",
       "max": 534.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_06a3934c0ef344c18d45e22a63b60cd5",
       "tabbable": null,
       "tooltip": null,
       "value": 534.0
      }
     },
     "cf1eda7a0ff54a46829000d966c0ef51": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d2ca5f97453040ff8d3b29be7858eca6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1bb57d46b71941dc87e97c2009d0a05e",
       "placeholder": "​",
       "style": "IPY_MODEL_046f800efae341f98f267ef3d3c5089c",
       "tabbable": null,
       "tooltip": null,
       "value": " 296/296 [00:00&lt;00:00, 32.3kB/s]"
      }
     },
     "d3fb05f882584c14b81fa897d0161dec": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d7057bca8b6948dabf2edc6d111615e5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_361fcc791bf2442793c34db3082bc835",
       "placeholder": "​",
       "style": "IPY_MODEL_544d8e9a08b1460480fbbf6e561daf67",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer.json: 100%"
      }
     },
     "e08980f666e14be885b1eeffd57fcdf3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f0706075816b4483b0f0e41e8d40764e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e08980f666e14be885b1eeffd57fcdf3",
       "placeholder": "​",
       "style": "IPY_MODEL_75b536c87766438fa515d6dbc7645ece",
       "tabbable": null,
       "tooltip": null,
       "value": " 2.47G/2.47G [00:58&lt;00:00, 42.4MB/s]"
      }
     },
     "f1cb7ba0902b4216bc26a99100691165": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f1e9bae3f6744cd4b7974ac6e4907f97": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_9dc4cdb52c0b4d33a0fb424f5196f6d8",
        "IPY_MODEL_59205972c665456e81512cff1b5827a0",
        "IPY_MODEL_f0706075816b4483b0f0e41e8d40764e"
       ],
       "layout": "IPY_MODEL_8430bbdb897349fcbbe7ee4a4d578a79",
       "tabbable": null,
       "tooltip": null
      }
     },
     "f4c0eb32777e4d7aacffac96303c88ee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f5cd82674dbc4f8d892bd4e4c5e76565": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
